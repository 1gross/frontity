name: chrome e2e tests

on: [pull_request]

jobs:
  e2e-tests:
    runs-on: ubuntu-16.04
    container:
      image: cypress/browsers:node12.14.1-chrome85-ff81

    strategy:
      matrix:
        include:
          - name: Default
            wp-version: latest
            args: "--prod"
          - name: ES5 Bundle
            wp-version: latest
            args: "--prod --target es5"
          - name: Development
            wp-version: latest
            args: ""
          - name: Previous WordPress Version
            wp-version: 5.4
            args: "--prod --wp-version 5.4"
          - name: Relative Public Path
            wp-version: latest
            args: "--prod --public-path /custom/path/"
          - name: Absolute Public Path
            wp-version: latest
            args: "--prod --public-path http://localhost:3001/custom/path/"

    steps:
      - name: Install Docker Compose
        run: curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose

      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies (root)
        run: npm ci
        env:
          CI: true

      - name: Run e2e tests
        uses: cypress-io/github-action@v2
        env:
          # We need to specify the WordPress version here as well so that
          # it's available inside of the cypress GH action container
          WORDPRESS_VERSION: ${{ matrix.wp-version }}
        with:
          start: "node e2e.js \
            --cypress off \
            --suite all \
            ${{ matrix.args }}"
          wait-on: "http://localhost:3001"
          wait-on-timeout: 600
          browser: chrome
          working-directory: e2e
          config: video=true,screenshotOnRunFailure=true

      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: e2e/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: e2e/videos
